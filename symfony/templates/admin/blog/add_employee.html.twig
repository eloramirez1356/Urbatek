{% extends 'admin/layout.html.twig' %}

{% block body_id 'admin_post_index' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/admin-employees.css') }}">
{% endblock %}

{% block main %}
    <h1>Empleados</h1>
    
    {% for message in app.flashes('success') %}
        <div class="alert alert-success">
            {{ message }}
        </div>
    {% endfor %}
    
    {% for message in app.flashes('error') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}

    <table style="width:100%">
        <tr>
            <th>Nombre</th>
            <th>Apellidos</th>
            <th>Usuario</th>
            <th>Email</th>
            <th>Obras activas</th>
            <th>Máquinas asignadas</th>
            <th>Acciones</th>
        </tr>

        {% for employee in employees %}
            <tr>
                <td>{{ employee.name }}</td>
                <td>{{ employee.surname }}</td>
                <td>{{ employee.user ? employee.user.username : 'Sin usuario' }}</td>
                <td>{{ employee.user ? employee.user.email : 'Sin email' }}</td>
                <td>
                    {% for site in employee.sites %}
                        {% if site.isactive %}
                            {{ site.name }},
                        {% endif %}
                    {% endfor %}
                </td>
                <td>
                    {% for machine in employee.machines %}
                        <span class="machine-badge">
                            {{ machine.name }} ({{ machine.brand }})
                            {% if machine.isTruck() %}
                                <span class="badge badge-info">Camión</span>
                            {% else %}
                                <span class="badge badge-success">Máquina</span>
                            {% endif %}
                        </span>
                    {% endfor %}
                </td>
                <td>
                    <button class="btn btn-sm btn-primary" onclick="openAssignMachines({{ employee.id }}, '{{ employee.name }} {{ employee.surname }}')">
                        Asignar máquinas
                    </button>
                </td>
            </tr>
        {% endfor %}
    </table>
    
    <br>
    <h2>Añadir empleado</h2>
    <div class="form-container">
        {{ form_start(employee_form) }}
            <div class="form-row">
                <div class="form-group">
                    {{ form_label(employee_form.name) }}
                    {{ form_widget(employee_form.name) }}
                    {{ form_errors(employee_form.name) }}
                </div>
                <div class="form-group">
                    {{ form_label(employee_form.surname) }}
                    {{ form_widget(employee_form.surname) }}
                    {{ form_errors(employee_form.surname) }}
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    {{ form_label(employee_form.username) }}
                    {{ form_widget(employee_form.username) }}
                    {{ form_errors(employee_form.username) }}
                </div>
                <div class="form-group">
                    {{ form_label(employee_form.email) }}
                    {{ form_widget(employee_form.email) }}
                    {{ form_errors(employee_form.email) }}
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    {{ form_label(employee_form.password) }}
                    {{ form_widget(employee_form.password) }}
                    {{ form_errors(employee_form.password) }}
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    {{ form_widget(employee_form.submit) }}
                </div>
            </div>
        {{ form_end(employee_form) }}
    </div>

    <!-- Modal para asignar máquinas -->
    <div id="assignMachinesModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeAssignMachines()">&times;</span>
            <h2>Asignar máquinas a <span id="employeeName"></span></h2>
            
            <div style="margin-bottom: 20px;">
                <label for="machineFilter">Filtrar por tipo:</label>
                <select id="machineFilter" onchange="filterMachines()">
                    <option value="">Todos</option>
                    <option value="machine">Solo máquinas</option>
                    <option value="truck">Solo camiones</option>
                </select>
            </div>
            
            <div style="display: flex; gap: 20px;">
                <div style="flex: 1;">
                    <h3>Máquinas disponibles</h3>
                    <div id="availableMachines" class="machine-list">
                        <!-- Se llenará dinámicamente -->
                    </div>
                </div>
                <div style="flex: 1;">
                    <h3>Máquinas asignadas</h3>
                    <div id="assignedMachines" class="machine-list">
                        <!-- Se llenará dinámicamente -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentEmployeeId = null;
        let allMachines = [];
        let assignedMachines = [];
        
        function openAssignMachines(employeeId, employeeName) {
            currentEmployeeId = employeeId;
            document.getElementById('employeeName').textContent = employeeName;
            document.getElementById('assignMachinesModal').style.display = 'block';
            
            // Cargar máquinas
            loadMachines(employeeId);
        }
        
        function closeAssignMachines() {
            document.getElementById('assignMachinesModal').style.display = 'none';
        }
        
        function loadMachines(employeeId) {
            fetch(`/admin/employees/${employeeId}/machines`)
                .then(response => response.json())
                .then(data => {
                    allMachines = data.available || [];
                    assignedMachines = data.assigned || [];
                    renderMachines();
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al cargar las máquinas');
                });
        }
        
        function renderMachines() {
            const filter = document.getElementById('machineFilter').value;
            const availableContainer = document.getElementById('availableMachines');
            const assignedContainer = document.getElementById('assignedMachines');
            
            // Filtrar máquinas disponibles
            let availableToShow = allMachines;
            if (filter) {
                availableToShow = allMachines.filter(machine => {
                    if (filter === 'machine') return machine.type === 'machine';
                    if (filter === 'truck') return machine.type === 'truck';
                    return true;
                });
            }
            
            // Renderizar máquinas disponibles
            availableContainer.innerHTML = availableToShow.map(machine => `
                <div class="machine-item">
                    <div>
                        <strong>${machine.name}</strong> (${machine.brand})
                        <span class="badge ${machine.type === 'truck' ? 'badge-info' : 'badge-success'}">
                            ${machine.type === 'truck' ? 'Camión' : 'Máquina'}
                        </span>
                    </div>
                    <button class="btn-assign" onclick="assignMachine(${machine.id})">
                        Asignar
                    </button>
                </div>
            `).join('');
            
            // Renderizar máquinas asignadas
            assignedContainer.innerHTML = assignedMachines.map(machine => `
                <div class="machine-item">
                    <div>
                        <strong>${machine.name}</strong> (${machine.brand})
                        <span class="badge ${machine.type === 'truck' ? 'badge-info' : 'badge-success'}">
                            ${machine.type === 'truck' ? 'Camión' : 'Máquina'}
                        </span>
                    </div>
                    <button class="btn-unassign" onclick="unassignMachine(${machine.id})">
                        Desasignar
                    </button>
                </div>
            `).join('');
        }
        
        function filterMachines() {
            renderMachines();
        }
        
        function assignMachine(machineId) {
            if (!currentEmployeeId) return;
            
            fetch(`/admin/employees/${currentEmployeeId}/machines/${machineId}/assign`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    loadMachines(currentEmployeeId);
                    // Recargar la página para actualizar la tabla
                    setTimeout(() => location.reload(), 500);
                } else {
                    alert('Error al asignar la máquina');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al asignar la máquina');
            });
        }
        
        function unassignMachine(machineId) {
            if (!currentEmployeeId) return;
            
            fetch(`/admin/employees/${currentEmployeeId}/machines/${machineId}/unassign`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    loadMachines(currentEmployeeId);
                    // Recargar la página para actualizar la tabla
                    setTimeout(() => location.reload(), 500);
                } else {
                    alert('Error al desasignar la máquina');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al desasignar la máquina');
            });
        }
        
        // Cerrar modal al hacer clic fuera de él
        window.onclick = function(event) {
            const modal = document.getElementById('assignMachinesModal');
            if (event.target === modal) {
                closeAssignMachines();
            }
        }
    </script>

{% endblock %}